{"version":3,"file":"static/js/1650.b2872e24.chunk.js","mappings":"6VAsBA,IAAMA,EAAsBC,EAAAA,YAAiB,SAAgBC,EAAOC,GAClE,IACEC,EAGEF,EAHFE,SACAC,EAEEH,EAFFG,UAASC,EAEPJ,EADFK,cAAAA,OAAa,IAAAD,GAAQA,EAEvBE,EAAkCP,EAAAA,SAAe,MAAKQ,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA/CG,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAYC,EAAAA,EAAAA,GAAwBb,EAAAA,eAAqBG,IAAYW,EAAAA,EAAAA,GAAmBX,GAAY,KAAMD,GAehH,IAdAa,EAAAA,EAAAA,IAAkB,WACXT,GACHK,EA1BN,SAAsBP,GACpB,MAA4B,oBAAdA,EAA2BA,IAAcA,CACzD,CAwBmBY,CAAaZ,IAAca,SAASC,KAErD,GAAG,CAACd,EAAWE,KACfS,EAAAA,EAAAA,IAAkB,WAChB,GAAIL,IAAcJ,EAEhB,OADAa,EAAAA,EAAAA,GAAOjB,EAAcQ,GACd,YACLS,EAAAA,EAAAA,GAAOjB,EAAc,KACvB,CAGJ,GAAG,CAACA,EAAcQ,EAAWJ,IACzBA,EAAe,CACjB,GAAiBN,EAAAA,eAAqBG,GAAW,CAC/C,IAAMiB,EAAW,CACfC,IAAKT,GAEP,OAAoBZ,EAAAA,aAAmBG,EAAUiB,EACnD,CACA,OAAOjB,CACT,CACA,OAAOO,EAAyBY,EAAAA,aAAsBnB,EAAUO,GAAaA,CAC/E,IA+BA,K,qEC/EA,MAHA,SAAyBa,GACvB,MAA0B,kBAAZA,CAChB,ECsBA,MAZA,SAA0BC,EAAaC,EAAYC,GACjD,YAAoBC,IAAhBH,GAA6BI,EAAgBJ,GACxCC,GAETI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKJ,GAAU,IACbC,YAAUG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLJ,EAAWC,YACXA,IAGT,C,qBCTA,IAVA,SAA8BI,GAA0B,IAAlBC,EAAWC,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GAAG,GAClD,QAAeL,IAAXG,EACF,MAAO,CAAC,EAEV,IAAMI,EAAS,CAAC,EAIhB,OAHAC,OAAOC,KAAKN,GAAQO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAM,aAAuC,oBAAjBT,EAAOQ,KAAyBP,EAAYS,SAASF,EAAK,IAAEG,SAAQ,SAAAH,GACtIJ,EAAOI,GAAQR,EAAOQ,EACxB,IACOJ,CACT,C,qECPe,SAASpB,EAAmBS,GAEF,IAAAmB,EAAvC,OAAIC,SAAS3C,EAAAA,QAAe,KAAO,IACnB,OAAPuB,QAAO,IAAPA,GAAc,QAAPmB,EAAPnB,EAAStB,aAAK,IAAAyC,OAAP,EAAPA,EAAgBrB,MAAO,MAIlB,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASF,MAAO,IACzB,C,yFCAA,MAVA,SAA2BS,GACzB,QAAeH,IAAXG,EACF,MAAO,CAAC,EAEV,IAAMI,EAAS,CAAC,EAIhB,OAHAC,OAAOC,KAAKN,GAAQO,QAAO,SAAAC,GAAI,QAAMA,EAAKC,MAAM,aAAuC,oBAAjBT,EAAOQ,GAAqB,IAAEG,SAAQ,SAAAH,GAC1GJ,EAAOI,GAAQR,EAAOQ,EACxB,IACOJ,CACT,ECyEA,MAzEA,SAAwBU,GACtB,IACEC,EAKED,EALFC,aACAC,EAIEF,EAJFE,gBACAC,EAGEH,EAHFG,kBACAC,EAEEJ,EAFFI,uBACAC,EACEL,EADFK,UAEF,IAAKJ,EAAc,CAGjB,IAAMK,GAAgBC,EAAAA,EAAAA,GAAoB,OAAfL,QAAe,IAAfA,OAAe,EAAfA,EAAiBG,UAAWA,EAAiC,OAAtBD,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBC,UAA4B,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBE,WAClHG,GAAWvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACG,OAAfiB,QAAe,IAAfA,OAAe,EAAfA,EAAiBO,OACK,OAAtBL,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBK,OACP,OAAjBN,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBM,OAElBpD,GAAK4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNiB,GACAE,GACAD,GAQL,OANIG,EAAcjB,OAAS,IACzBhC,EAAMgD,UAAYC,GAEhBf,OAAOC,KAAKgB,GAAanB,OAAS,IACpChC,EAAMoD,MAAQD,GAET,CACLnD,MAAAA,EACAqD,iBAAa3B,EAEjB,CAKA,IAAM4B,GAAgBC,EAAAA,EAAAA,IAAoB3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACvCmB,GACAD,IAECU,EAAsCC,EAAkBX,GACxDY,EAAiCD,EAAkBV,GACnDY,EAAoBf,EAAaU,GAMjCL,GAAgBC,EAAAA,EAAAA,GAAsB,OAAjBS,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBX,UAA0B,OAAfH,QAAe,IAAfA,OAAe,EAAfA,EAAiBG,UAAWA,EAAiC,OAAtBD,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBC,UAA4B,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBE,WAChJG,GAAWvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK,OAAjB+B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBP,OACJ,OAAfP,QAAe,IAAfA,OAAe,EAAfA,EAAiBO,OACK,OAAtBL,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBK,OACP,OAAjBN,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBM,OAElBpD,GAAK4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN+B,GACAd,GACAa,GACAF,GAQL,OANIP,EAAcjB,OAAS,IACzBhC,EAAMgD,UAAYC,GAEhBf,OAAOC,KAAKgB,GAAanB,OAAS,IACpChC,EAAMoD,MAAQD,GAET,CACLnD,MAAAA,EACAqD,YAAaM,EAAkBvC,IAEnC,C,uBCxFe,SAASwC,EAAcC,GACpC,OAAOA,GAAQA,EAAKD,eAAiB5C,QACvC,C,mDCQA,IANA,SAA+B8C,EAAgBrC,EAAYsC,GACzD,MAA8B,oBAAnBD,EACFA,EAAerC,EAAYsC,GAE7BD,CACT,C,uBCIe,SAAS5C,EAAOE,EAAK4C,GACf,oBAAR5C,EACTA,EAAI4C,GACK5C,IACTA,EAAI6C,QAAUD,EAElB,C,oECRMlD,EAAsC,qBAAXoD,OAAyBnE,EAAAA,gBAAwBA,EAAAA,UAClF,K,+ECSe,SAASa,IAAoB,QAAAuD,EAAApC,UAAAC,OAANoC,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAvC,UAAAuC,GAMxC,OAAOvE,EAAAA,SAAc,WACnB,OAAIqE,EAAKG,OAAM,SAAAnD,GAAG,OAAW,MAAPA,CAAW,IACxB,KAEF,SAAAoD,GACLJ,EAAK5B,SAAQ,SAAApB,IACXF,EAAAA,EAAAA,GAAOE,EAAKoD,EACd,GACF,CAGF,GAAGJ,EACL,C","sources":["../node_modules/@mui/material/Portal/Portal.js","../node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","../node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/utils/esm/getReactElementRef/getReactElementRef.js","../node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef, unstable_getReactElementRef as getReactElementRef } from '@mui/utils';\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/material-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/material-ui/api/portal/)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef(/*#__PURE__*/React.isValidElement(children) ? getReactElementRef(children) : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if (/*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return children;\n  }\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport default Portal;","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","import * as React from 'react';\n\n/**\n * Returns the ref of a React element handling differences between React 19 and older versions.\n * It will throw runtime error if the element is not a valid React element.\n *\n * @param element React.ReactElement\n * @returns React.Ref<any> | null\n */\nexport default function getReactElementRef(element) {\n  // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions\n  if (parseInt(React.version, 10) >= 19) {\n    return element?.props?.ref || null;\n  }\n  // @ts-expect-error element.ref is not included in the ReactElement type\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189\n  return element?.ref || null;\n}","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}"],"names":["Portal","React","props","forwardedRef","children","container","_props$disablePortal","disablePortal","_React$useState","_React$useState2","_slicedToArray","mountNode","setMountNode","handleRef","useForkRef","getReactElementRef","useEnhancedEffect","getContainer","document","body","setRef","newProps","ref","ReactDOM","element","elementType","otherProps","ownerState","undefined","isHostComponent","_objectSpread","object","excludeKeys","arguments","length","result","Object","keys","filter","prop","match","includes","forEach","_element$props","parseInt","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","clsx","mergedStyle","style","internalRef","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ownerDocument","node","componentProps","slotState","value","current","window","_len","refs","Array","_key","every","instance"],"sourceRoot":""}