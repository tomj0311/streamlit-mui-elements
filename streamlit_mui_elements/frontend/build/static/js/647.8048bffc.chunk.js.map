{"version":3,"file":"static/js/647.8048bffc.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../node_modules/@mui/material/RadioGroup/RadioGroup.js","../node_modules/@mui/material/RadioGroup/useRadioGroup.js","../node_modules/@mui/material/utils/useControlled.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/material/utils/useId.js","../node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/utils/esm/useControlled/useControlled.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/utils/esm/useId/useId.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from \"./FormControlContext.js\";\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getFormGroupUtilityClass } from \"./formGroupClasses.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap',\n  variants: [{\n    props: {\n      row: true\n    },\n    style: {\n      flexDirection: 'row'\n    }\n  }]\n});\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n    className,\n    row = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    row,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from \"../FormGroup/index.js\";\nimport { getRadioGroupUtilityClass } from \"./radioGroupClasses.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nimport useId from \"../utils/useId.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    className,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className),\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","'use client';\n\nimport useControlled from '@mui/utils/useControlled';\nexport default useControlled;","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nexport default useForkRef;","'use client';\n\nimport useId from '@mui/utils/useId';\nexport default useId;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\n// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      // Object.is() is not equivalent to the === operator.\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is for more details.\n      if (!isControlled && !Object.is(defaultValue, defaultProp)) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}"],"names":["FormControlContext","React","undefined","formControlState","_ref","props","states","muiFormControl","reduce","acc","state","useFormControl","_excluded","FormGroupRoot","styled","name","slot","overridesResolver","styles","ownerState","root","row","display","flexDirection","flexWrap","variants","style","FormGroup","inProps","ref","useDefaultProps","className","_props$row","other","_objectWithoutProperties","fcs","_objectSpread","error","classes","slots","composeClasses","getFormGroupUtilityClass","useUtilityClasses","_jsx","clsx","generateUtilityClass","formGroupClasses","generateUtilityClasses","RadioGroupContext","getRadioGroupUtilityClass","actions","children","defaultValue","nameProp","onChange","valueProp","value","rootRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","event","target","role","useRadioGroup","setRef","defaultProp","isControlled","_React$useState","_React$useState2","valueState","setValue","newValue","_len","arguments","length","refs","Array","_key","every","instance","forEach","globalId","maybeReactUseId","idOverride","reactId","defaultId","setDefaultId","id","concat","useGlobalId"],"sourceRoot":""}