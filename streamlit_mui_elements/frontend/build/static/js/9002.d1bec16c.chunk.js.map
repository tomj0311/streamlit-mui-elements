{"version":3,"file":"static/js/9002.d1bec16c.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Badge/useBadge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/material/utils/createSimplePaletteValueFilter.js","../node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","../node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js","../node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js"],"sourcesContent":["'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import capitalize from '@mui/utils/capitalize';\nexport default capitalize;","/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","'use client';\n\nimport useForkRef from \"../useForkRef/index.js\";\nimport appendOwnerState from \"../appendOwnerState/index.js\";\nimport mergeSlotProps from \"../mergeSlotProps/index.js\";\nimport resolveComponentProps from \"../resolveComponentProps/index.js\";\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...other\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...other,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}\nexport default useSlotProps;"],"names":["parameters","badgeContentProp","badgeContent","_parameters$invisible","invisible","invisibleProp","_parameters$max","max","maxProp","_parameters$showZero","showZero","prevProps","usePreviousProps","_ref","_ref$max","displayValue","Number","concat","getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","color","memoTheme","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","_toConsumableArray","Object","entries","palette","filter","createSimplePaletteValueFilter","map","_ref2","_slicedToArray","style","backgroundColor","vars","main","contrastText","RADIUS_DOT","_ref4","_defineProperty","top","right","transform","transformOrigin","badgeClasses","_ref5","bottom","_ref6","left","_ref7","_ref8","_ref9","_ref10","_ref11","leavingScreen","getAnchorOrigin","_anchorOrigin$vertica","_anchorOrigin$horizon","React","inProps","ref","_ref13","_slots$root","_ref14","_slots$badge","_slotProps$root","_slotProps$badge","useDefaultProps","anchorOriginProp","className","component","classes","_props$components","components","_props$componentsProp","componentsProps","children","_props$overlap","overlapProp","_props$color","colorProp","_props$invisible","_props$max","slots","slotProps","_props$showZero","_props$variant","variantProp","other","_objectWithoutProperties","_useBadge","useBadge","invisibleFromHook","displayValueFromHook","_ref12","_ref12$color","_ref12$overlap","anchorOriginPropProp","_ref12$variant","undefined","_objectSpread","_ownerState$classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","additionalPropertiesToCheck","arguments","length","value","obj","hasCorrectMainProperty","_step","_iterator","_createForOfIteratorHelper","s","n","done","hasOwnProperty","err","e","f","checkSimplePaletteColorValues","element","otherProps","isHostComponent","object","excludeKeys","result","keys","prop","match","includes","forEach","getSlotProps","joinedClasses","mergedStyle","internalRef","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","componentProps","slotState","setRef","current","useForkRef","_len","refs","Array","_key","every","instance","_parameters$additiona","_parameters$skipResol","skipResolvingSlotProps","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","mergedProps","appendOwnerState"],"sourceRoot":""}